<Activity mc:Ignorable="sap sap2010 sads" x:Class="Workflow1.Activity1" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap2010:WorkflowViewState.IdRef="Workflow1.Activity1_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Workflow1</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Int32" Default="-1" Name="i" />
      <Variable x:TypeArguments="x:Double" Name="y" />
      <Variable x:TypeArguments="x:Double" Name="eq" />
      <Variable x:TypeArguments="x:Double" Name="x" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_6">
        <While sap2010:WorkflowViewState.IdRef="While_1">
          <While.Condition>
            <mca:CSharpValue x:TypeArguments="x:Boolean">i != 0</mca:CSharpValue>
          </While.Condition>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_13">
            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_16">
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String" xml:space="preserve">"What you want to calculate:\n" +
                "1 - add\n" +
                "2 - substract\n" +
                "3 - multiply\n" +
                "4 - divide\n" +
                "5 - modulo\n\n" +
                "Enter 0 to quit"</mca:CSharpValue>
              </InArgument>
            </WriteLine>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">
                  <mca:CSharpReference x:TypeArguments="x:Int32">i</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">
                  <mca:CSharpValue x:TypeArguments="x:Int32">int.Parse(Console.ReadLine())</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Switch x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Switch`1_2">
              <Switch.Default>
                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_17" Text="Wrong argument!!!" />
              </Switch.Default>
              <Switch.Expression>
                <InArgument x:TypeArguments="x:Int32">
                  <mca:CSharpValue x:TypeArguments="x:Int32">i</mca:CSharpValue>
                </InArgument>
              </Switch.Expression>
              <Sequence x:Key="1" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_18" Text="Enter first number then hit ENTER then enter second number and hit ENTER again" />
                <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">
                      <mca:CSharpReference x:TypeArguments="x:Double">x</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">
                      <mca:CSharpValue x:TypeArguments="x:Double">double.Parse(Console.ReadLine())</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">
                      <mca:CSharpReference x:TypeArguments="x:Double">y</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">
                      <mca:CSharpValue x:TypeArguments="x:Double">double.Parse(Console.ReadLine())</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_21">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">
                      <mca:CSharpReference x:TypeArguments="x:Double">eq</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">
                      <mca:CSharpValue x:TypeArguments="x:Double">x + y</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_19">
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">x.ToString() + " + " + y.ToString() + " = " + eq.ToString()</mca:CSharpValue>
                  </InArgument>
                </WriteLine>
              </Sequence>
              <Sequence x:Key="2" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_20" Text="Enter first number then hit ENTER then enter second number and hit ENTER again" />
                <Assign sap2010:WorkflowViewState.IdRef="Assign_22">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">
                      <mca:CSharpReference x:TypeArguments="x:Double">x</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">
                      <mca:CSharpValue x:TypeArguments="x:Double">double.Parse(Console.ReadLine())</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_23">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">
                      <mca:CSharpReference x:TypeArguments="x:Double">y</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">
                      <mca:CSharpValue x:TypeArguments="x:Double">double.Parse(Console.ReadLine())</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_24">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">
                      <mca:CSharpReference x:TypeArguments="x:Double">eq</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">
                      <mca:CSharpValue x:TypeArguments="x:Double">x - y</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_21">
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">x.ToString() + " - " + y.ToString() + " = " + eq.ToString()</mca:CSharpValue>
                  </InArgument>
                </WriteLine>
              </Sequence>
              <Sequence x:Key="3" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_22" Text="Enter first number then hit ENTER then enter second number and hit ENTER again" />
                <Assign sap2010:WorkflowViewState.IdRef="Assign_25">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">
                      <mca:CSharpReference x:TypeArguments="x:Double">x</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">
                      <mca:CSharpValue x:TypeArguments="x:Double">double.Parse(Console.ReadLine())</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_26">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">
                      <mca:CSharpReference x:TypeArguments="x:Double">y</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">
                      <mca:CSharpValue x:TypeArguments="x:Double">double.Parse(Console.ReadLine())</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_27">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">
                      <mca:CSharpReference x:TypeArguments="x:Double">eq</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">
                      <mca:CSharpValue x:TypeArguments="x:Double">x * y</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_23">
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">x.ToString() + " * " + y.ToString() + " = " + eq.ToString()</mca:CSharpValue>
                  </InArgument>
                </WriteLine>
              </Sequence>
              <Sequence x:Key="4" sap2010:WorkflowViewState.IdRef="Sequence_11">
                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_24" Text="Enter first number then hit ENTER then enter second number and hit ENTER again" />
                <Assign sap2010:WorkflowViewState.IdRef="Assign_28">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">
                      <mca:CSharpReference x:TypeArguments="x:Double">x</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">
                      <mca:CSharpValue x:TypeArguments="x:Double">double.Parse(Console.ReadLine())</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_29">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">
                      <mca:CSharpReference x:TypeArguments="x:Double">y</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">
                      <mca:CSharpValue x:TypeArguments="x:Double">double.Parse(Console.ReadLine())</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <If sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <mca:CSharpValue x:TypeArguments="x:Boolean">x == 0 || y == 0</mca:CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_25" Text="Cannot divide by 0" />
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_30">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Double">
                            <mca:CSharpReference x:TypeArguments="x:Double">eq</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Double">
                            <mca:CSharpValue x:TypeArguments="x:Double">x / y</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_26">
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String">x.ToString() + " : " + y.ToString() + " = " + eq.ToString()</mca:CSharpValue>
                        </InArgument>
                      </WriteLine>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
              <Sequence x:Key="5" sap2010:WorkflowViewState.IdRef="Sequence_12">
                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_27" Text="Enter first number then hit ENTER then enter second number and hit ENTER again" />
                <Assign sap2010:WorkflowViewState.IdRef="Assign_31">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">
                      <mca:CSharpReference x:TypeArguments="x:Double">x</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">
                      <mca:CSharpValue x:TypeArguments="x:Double">double.Parse(Console.ReadLine())</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_32">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">
                      <mca:CSharpReference x:TypeArguments="x:Double">y</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">
                      <mca:CSharpValue x:TypeArguments="x:Double">double.Parse(Console.ReadLine())</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">
                      <mca:CSharpReference x:TypeArguments="x:Double">eq</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">
                      <mca:CSharpValue x:TypeArguments="x:Double">x % y</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_28">
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">x.ToString() + " mod " + y.ToString() + " = " + eq.ToString()</mca:CSharpValue>
                  </InArgument>
                </WriteLine>
              </Sequence>
              <x:Null x:Key="0" />
            </Switch>
          </Sequence>
        </While>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID0</x:Reference>
    <sads:DebugSymbol.Symbol>d1hDOlxVc2Vyc1xtc29rb2xcRG9jdW1lbnRzXFZpc3VhbCBTdHVkaW8gMjAxN1xQcm9qZWN0c1xXb3JrZmxvdzFcV29ya2Zsb3cxXEFjdGl2aXR5MS54YW1sWSYDxgIPAgEBKDMoNwIBAi8JwQIRAgEDMwvAAhYCAQkxDTFSAgEENA0+GQMB+AE/DUoWAwHtAUsNvwIWAgEKNhE8NAMB+QFHE0dtAwHzAUITQlkDAe4BURNRUQIBC1QPfxoDAcMBgAEPqwEaAwGZAawBD9cBGgIBb9gBD5ECGgIBPJICD70CGgIBEk0RTWYCARBVEVWjAQMB6wFWEWEaAwHgAWIRbRoDAdUBbhF5GgMBygF6EX4dAwHEAYEBEYEBowEDAcEBggERjQEaAwG2AY4BEZkBGgMBqwGaARGlARoDAaABpgERqgEdAwGaAa0BEa0BowEDAZcBrgERuQEaAwGMAboBEcUBGgMBgQHGARHRARoCAXbSARHWAR0CAXDZARHZAaMBAgFt2gER5QEaAgFi5gER8QEaAgFX8gERkAIWAgE9kwIRkwKjAQIBOpQCEZ8CGgIBL6ACEasCGgIBJKwCEbcCGgIBGbgCEbwCHQIBE01QTWMCARFVUFWgAQMB7AFeF151AwHmAVkXWV4DAeEBahdqdQMB2wFlF2VeAwHWAXYXdloDAdABcRdxXwMBywF8FXyOAQMBxQGBAVCBAaABAwHCAYoBF4oBdQMBvAGFAReFAV4DAbcBlgEXlgF1AwGxAZEBF5EBXgMBrAGiAReiAVoDAaYBnQEXnQFfAwGhAagBFagBjgEDAZsBrQFQrQGgAQMBmAG2ARe2AXUDAZIBsQEXsQFeAwGNAcIBF8IBdQMBhwG9ARe9AV4DAYIBzgEXzgFaAgF8yQEXyQFfAgF31AEV1AGOAQIBcdkBUNkBoAECAW7iARfiAXUCAWjdARfdAV4CAWPuARfuAXUCAV3pARfpAV4CAVj1ARf1AWYCAT75ARX5AWsCAVX8ARWOAiACAUOTAlCTAqABAgE7nAIXnAJ1AgE1lwIXlwJeAgEwqAIXqAJ1AgEqowIXowJeAgEltAIXtAJaAgEfrwIXrwJfAgEaugIVugKQAQIBFPkBVPkBaAIBVv0BF4gCIAIBSokCF40CIwIBRIUCHYUCYAIBUIACHYACZQIBS4sCG4sClAECAUU=</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WriteLine_16" sap:VirtualizedContainerService.HintSize="476,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="476,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_17" sap:VirtualizedContainerService.HintSize="210,62" />
      <sap2010:ViewStateData Id="WriteLine_18" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteLine_19" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="264,594">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_20" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteLine_21" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="264,594">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_22" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteLine_23" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="264,594">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_24" sap:VirtualizedContainerService.HintSize="499,62" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="499,62" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="499,62" />
      <sap2010:ViewStateData Id="WriteLine_25" sap:VirtualizedContainerService.HintSize="210,62" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteLine_26" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="264,288">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="499,438" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="521,868">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_27" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="WriteLine_28" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="264,593">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Switch`1_2" sap:VirtualizedContainerService.HintSize="476,250">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="498,578">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="524,738">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">10,34.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="675,974">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,107.5 240,107.5 240,17.5 110,17.5 110,34.5</av:PointCollection>
            <x:Double x:Key="Width">661</x:Double>
            <x:Double x:Key="Height">938.46556632719057</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Workflow1.Activity1_1" sap:VirtualizedContainerService.HintSize="715,1054" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>